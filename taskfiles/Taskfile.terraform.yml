---
version: '3'
vars:
    TF_WORKING_DIR:
    TF_VARS_FILE:
    TF_BACKEND_CONFIG:
    AWS_ACCESS_KEY_ID:
    AWS_SECRET_ACCESS_KEY:
tasks:
    check-workdir:
        desc: Validate whether the working directory passed is valid
        cmds:
            - |
              if [ -z "{{.TF_WORKING_DIR}}" ]; then
                echo "Working directory is not set (check variable TF_WORKING_DIR)"
                echo "Working dir -> {{.TF_WORKING_DIR}}"
                exit 1
              fi

              if [ ! -d "{{.TF_WORKING_DIR}}" ]; then
                  echo "Working directory is not a valid directory (check variable TF_WORKING_DIR)"
                  echo "Path examined: $(pwd)/{{.TF_WORKING_DIR}}"
                  exit 1
              else
                  echo "Working directory is valid. Found in path $(pwd)"
                  echo "Checking .tf files on it..."
                  ls -ltrah {{.TF_WORKING_DIR}}
              fi

              if [ -z "$(find {{.TF_WORKING_DIR}} -name '*.tf' -print -quit)" ]; then
                echo "No valid .tf files found in working directory {{.TF_WORKING_DIR}}"
                exit 1
              else
                echo "Found .tf files in working directory {{.TF_WORKING_DIR}}"
                echo "All validation passed"
                echo
              fi

              echo "Validation Result"
              echo "============================================================"
              echo "All passed"
        silent: true
    init:
        deps:
            - task: check-workdir
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        desc: Run Terraform initialize
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"

              cd {{.TF_WORKING_DIR}}

              echo "       _______"
              echo "      /       \\"
              echo "      |   0   |"
              echo "      |   _   |"
              echo "      \_______/"
              echo "Running Terraform command INIT"
              echo "============================================================"

              if [ -n "{{.TF_BACKEND_CONFIG}}" ] && [ -f "{{.TF_BACKEND_CONFIG}}" ]; then
                echo "Using backend configuration file: {{.TF_BACKEND_CONFIG}}"
                terraform init -backend-config="{{.TF_BACKEND_CONFIG}}"
              else
                echo "No backend configuration provided, running terraform init without a backend"
                terraform init
              fi
        silent: true
    plan:
        desc: Run Terraform plan
        deps:
            - task: init
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"


              cd {{.TF_WORKING_DIR}}

              echo "       _______"
              echo "      /       \\"
              echo "      |   0   |"
              echo "      |   _   |"
              echo "      \_______/"
              echo "Running Terraform command PLAN"
              echo "===============r============================================="

              if [ -n "{{.TF_VARS_FILE}}" ]; then
                terraform plan -var-file={{.TF_VARS_FILE}}
                echo "[ ! ] Using variables file: {{.TF_VARS_FILE}}"
              else
                echo "[ ! ] No variables file provided, running terraform plan without -var-file flag"
                terraform plan
              fi
        silent: true
    apply:
        desc: Run Terraform apply
        deps:
            - task: init
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"


              cd {{.TF_WORKING_DIR}}

              echo "       _______"
              echo "      /       \\"
              echo "      |   0   |"
              echo "      |   _   |"
              echo "      \_______/"
              echo "Running Terraform command APPLY"
              echo "===============r============================================="

              if [ -n "{{.TF_VARS_FILE}}" ]; then
                terraform apply -var-file={{.TF_VARS_FILE}} -auto-approve
              else
                terraform apply -auto-approve
              fi
        silent: true
    destroy:
        desc: Run Terraform destroy
        deps:
            - task: init
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"


              cd {{.TF_WORKING_DIR}}

              echo "       _______"
              echo "      /       \\"
              echo "      |   0   |"
              echo "      |   _   |"
              echo "      \_______/"
              echo "Running Terraform command DESTROY"
              echo "===============r============================================="

              if [ -n "{{.TF_VARS_FILE}}" ]; then
                terraform destroy -var-file={{.TF_VARS_FILE}} -auto-approve
              else
                terraform destroy -auto-approve
              fi
        silent: true
    fmt:
        desc: Run Terraform fmt check
        deps:
            - task: check-workdir
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"


              cd {{.TF_WORKING_DIR}}

              echo "          \\   ^__^ "
              echo "           \\  (oo)\\_______"
              echo "              (__)\\       )\\/\\"
              echo "                  ||----w |"
              echo "                  ||     ||"
              echo "Running Terraform command FORMAT"
              echo "============================================================"

              terraform fmt -recursive -write=false
        silent: true
    fmt-fix:
        desc: Run Terraform fmt fixing the non-formatted files
        deps:
            - task: check-workdir
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"


              cd {{.TF_WORKING_DIR}}

              echo "          \\   ^__^ "
              echo "           \\  (oo)\\_______"
              echo "              (__)\\       )\\/\\"
              echo "                  ||----w |"
              echo "                  ||     ||"
              echo "Running Terraform command FORMAT with FIX"
              echo "============================================================"

              terraform fmt -recursive -write=true
        silent: true
    validate:
        desc: Run Terraform validation
        deps:
            - task: init
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"


              cd {{.TF_WORKING_DIR}}

              echo "          \\   ^__^ "
              echo "           \\  (oo)\\_______"
              echo "              (__)\\       )\\/\\"
              echo "                  ||----w |"
              echo "                  ||     ||"
              echo "Running Terraform command VALIDATE"
              echo "============================================================"

              terraform validate
        silent: true
    lint:
        desc: Run Terraform lint
        deps:
            - task: check-workdir
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"


              cd {{.TF_WORKING_DIR}}

              echo "          \\   ^__^ "
              echo "           \\  (oo)\\_______"
              echo "              (__)\\       )\\/\\"
              echo "                  ||----w |"
              echo "                  ||     ||"
              echo "Running Terraform command LINTER (TfLint)"
              echo "============================================================"

              if [ ! -f .tflint.hcl ]; then
                echo "Error: .tflint.hcl file not found"
                exit 1
              fi

              tflint -v

              tflint --init
              tflint
        silent: true
    docs:
        desc: Generate Terraform docs
        deps:
            - task: check-workdir
              vars: {TF_WORKING_DIR: '{{.TF_WORKING_DIR}}'}
        cmds:
            - |
              echo "Working directory passed: {{.TF_WORKING_DIR}}"
              echo "Full path: $(pwd)/{{.TF_WORKING_DIR}}"


              cd {{.TF_WORKING_DIR}}

              echo "          \\   ^__^ "
              echo "           \\  (oo)\\_______"
              echo "              (__)\\       )\\/\\"
              echo "                  ||----w |"
              echo "                  ||     ||"
              echo "Running Terraform command DOCS"
              echo "============================================================"

              if [ ! -f .terraform-docs.yml ]; then
                echo "Error: .terraform-docs.yml file not found"
                exit 1
              fi

              cat .terraform-docs.yml
              terraform-docs -c .terraform-docs.yml md . > README.md
        silent: true
